name: Deploy web app via Storage Account

on:
  push:
    branches: main
  workflow_dispatch:

env:
  WEBAPP: func-h4lz5w7bfnvhe
  GROUP: function-app-storage-private-endpoints
  ACCOUNT: name-for-storage-acct  # Does not have to exist, this will be created for you
  CONTAINER: name-for-storage-container

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
        
    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: ./output
  
  publish:
    runs-on: windows-latest
    needs: build
    
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: app
          
      - name: Zip the app contents
        uses: papeloto/action-zip@v1
        with:
          files: app
          dest: app.zip

      - name: Azure CLI script
        with:
          azcliversion: 2.19.1
          shell: pwsh
          run: |
            az storage account create   -n $ACCOUNT   -g $GROUP -l westus
            az storage container create -n $CONTAINER --account-name $ACCOUNT
            az storage blob upload      -f app.zip    --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT

            ZIP_URL=$(az storage blob generate-sas --full-uri --permissions r --expiry ${{ env.expiry }} --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT | xargs)

            az functionapp deployment source config-zip --name $WEBAPP --resource-group $GROUP --src  $ZIP_URL --async false

            az storage container delete -n $CONTAINER --account-name $ACCOUNT 
